==============================================
Tests for the function `matrix_divided`
==============================================

>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

The function takes two arguments; the matrix and its divisor:

>>> matrix = [[1, 2], [3, 4.0]]
>>> matrix_divided(matrix, 2)
[[0.5, 1.0], [1.5, 2.0]]

If the divisor is not a number, it throws a TypeError:

>>> matrix_divided(matrix, "2") # doctest: +ELLIPSIS
Traceback (most recent call last):
    ...
TypeError: div must be a number

>>> matrix_divided(matrix, None) # doctest: +ELLIPSIS
Traceback (most recent call last):
    ...
TypeError: div must be a number

If the divisor is zero, it throws a ZeroDivisionError:

>>> matrix_divided(matrix, 0) # doctest: +ELLIPSIS
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

If the length of rows of the matrix is not consistent, it throws a TypeError:

>>> matrix_divided([[1, 2, 3], [4, 5]], 2) # doctest: +ELLIPSIS
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

If an element of the matrix is not a number, it throws a TypeError:

>>> matrix_divided([[1, 2], ["pay", 4]], 2) # doctest: +ELLIPSIS
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

If a one dimensional matrix or None is passed, it throws a TypeError:

>>> matrix_divided([1, 2, 3, 4, 5, 6], 2) # doctest: +ELLIPSIS
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(None, 2) # doctest: +ELLIPSIS
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

If the matrix is not a list of lists, it throws a TypeError:

>>> matrix_divided(([1, 2], [3, 4]), 2) # doctest: +ELLIPSIS
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([(2, 4), (6, 7)], 3) # doctest: +ELLIPSIS
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(matrix, float("nan"))
Traceback (most recent call last):
...
TypeError: div must be a number

>>> matrix_divided(matrix, float('inf'))
Traceback (most recent call last):
...
TypeError: div must be a number

>>> matrix_divided([[2, 4], [6, float('nan')]], 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[2, 4], [float('inf'), 7]], 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
